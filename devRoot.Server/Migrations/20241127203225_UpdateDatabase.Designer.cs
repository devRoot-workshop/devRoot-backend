// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using devRoot.Server;

#nullable disable

namespace devRoot.Server.Migrations
{
    [DbContext(typeof(devRootContext))]
    [Migration("20241127203225_UpdateDatabase")]
    partial class UpdateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("devRoot.Server.Models.Quest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("devRoot.Server.Models.Tag", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("QuestId")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("QuestId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("devRoot.Server.Models.Tag", b =>
                {
                    b.HasOne("devRoot.Server.Models.Quest", null)
                        .WithMany("Tags")
                        .HasForeignKey("QuestId");
                });

            modelBuilder.Entity("devRoot.Server.Models.Quest", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
